<?php
/*
 * AUTOGENERATED CODE - DO NOT EDIT!
 *
 * This base class was generated by the Trellis library and
 * must not be modified manually. Any modifications to this
 * file will be lost upon triggering the next automatic
 * class generation.
 *
 * If you are looking for a place to alter the behaviour of
 * the 'Owner' type please see the skeleton
 * class 'OwnerType'. Modifications to the skeleton
 * file will prevail any subsequent class generation runs.
 *
 * To define new attributes or adjust existing attributes and their
 * default options modify the schema definition file of
 * the 'Owner' type.
 *
 * @see https://github.com/honeybee/trellis
 */

namespace HBDemo\Commenting\Owner\Projection\Standard\Base;

use Trellis\Common\Options;
use Workflux\StateMachine\StateMachineInterface;
use HBDemo\Commenting\Owner\Projection\Standard\Base;
use Honeybee\Projection\ProjectionType;

/**
 * Serves as the base class to the 'Owner' type skeleton.
 */
abstract class OwnerType extends ProjectionType
{
    /**
     * StateMachineInterface $workflow_state_machine
     */
    protected $workflow_state_machine;

    /**
     * Creates a new 'OwnerType' instance.
     *
     * @param StateMachineInterface $workflow_state_machine
     */
    public function __construct(StateMachineInterface $workflow_state_machine)
    {
        $this->workflow_state_machine = $workflow_state_machine;

        parent::__construct(
            'Owner',
            [
                new \Trellis\Runtime\Attribute\Text\TextAttribute(
                    'name',
                    $this,
                    array(
                        'min_length' => 1,
                        'max_length' => 100,
                    )
                ),
                new \Trellis\Runtime\Attribute\Email\EmailAttribute(
                    'email',
                    $this,
                    []
                ),
                new \Trellis\Runtime\Attribute\Text\TextAttribute(
                    'password_hash',
                    $this,
                    array(
                        'min_length' => 60,
                        'max_length' => 60,
                    )
                ),
                new \Trellis\Runtime\Attribute\Token\TokenAttribute(
                    'authorization_token',
                    $this,
                    array(
                        'min_length' => 20,
                        'max_length' => 20,
                        'default_value' => 'auto_gen',
                    )
                ),
                new \Trellis\Runtime\Attribute\Timestamp\TimestampAttribute(
                    'authorization_expires',
                    $this,
                    []
                ),
                new \Trellis\Runtime\Attribute\ImageList\ImageListAttribute(
                    'images',
                    $this,
                    []
                ),
            ],
            new Options(
                array(
                'vendor' => 'HBDemo',
                'package' => 'Commenting',
                'projection' => 'Standard',
                'is_hierarchical' => false,
            )
            )
        );
    }

    /**
     * Returns an (immutable) state-machine instance responseable for controlling an entity's workflow.
     *
     * @return StateMachineInterface
     */
    public function getWorkflowStateMachine()
    {
        return $this->workflow_state_machine;
    }

    /**
     * Returns the EntityInterface implementor to use when creating new entities.
     *
     * @return string Fully qualified name of an EntityInterface implementation.
     */
    public static function getEntityImplementor()
    {
        return '\\HBDemo\\Commenting\\Owner\\Projection\\Standard\\Owner';
    }
}
